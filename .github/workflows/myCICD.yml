name: myCICD
run-name: ${{ github.actor }} is freaking out on Github Actions
on: [push]
jobs:
  build-projet:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to build your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'zulu'

      - name: Start MySql
        run: sudo service mysql start

      - name: Create Database from script
        run: mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -e "source dump/autopro.sql"

      - name: Give execution permission to mvnw
        run: chmod +x mvnw

      - name: Build projet
        run: ./mvnw -B verify

      - run: echo "This job's status is ${{ job.status }}"

      - name: Charging artefact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: target/*.jar
          retention-days: 1

  docker-build-image-api:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - build-projet
    steps:
      - uses: actions/checkout@v4

      - name: Connect to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: package.jar

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/apispringboot:latest

      - run: echo "Le job status est ${{ job.status }}."

  Discord:
    name: Discord
    runs-on: ubuntu-latest
    needs: build-projet

    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          content: "Hey <@530816055698784276>"
          title: 'üõ†Ô∏è Build ${{ job.status }}'
          description: |
            üì¶ Projet compil√© depuis `${{ github.repository }}` par `${{ github.actor }}` !!
            üîÅ Commit: `${{ github.sha }}`
            üåø Branch: `${{ github.ref_name }}`
          color: ${{ job.status == 'success' && '0x00FF00' || '0xFF0000' }}
          username: 'CI/CD Notifier'
          avatar_url: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
